'''
5. 0 은 땅, 1 은 물로 표현되는 디지털 연못이 있고 다음과 같이 표현이 됩니다. 연못 물 깊이의 총합을 구하시오.


    - 배열에서 숫자로 표현되는 엘리먼트(element)는 땅 또는 물을 나타냅니다. (0 은 땅, 1 은 물)
        
    - 배열 엘리먼트의 값을 변경하는데 엘리먼트의 좌, 우, 상, 하 모두가 자신보다 같거나 크면 현재값을 1 증가시킵니다. (조건) 
        i != 0 && if 주변 >= 자신 (++1)

    - 예를 들어 좌, 우, 상, 하 엘리먼트의 값이 1 이고 중심 엘리먼트의 값이 1 인 경우 중심 엘리먼트의 2 로 증가합니다.

    - 위 과정을 반복하여 엘리먼트의 값들을 증가시키고 앞에서 정의한 조건이 맞지 않는 경우 반복을 종료합니다.
        while 안돌면 종료후
        모든 행렬의 값의 합
    - 요구사항: 연못의 크기가 증가하더라도 대응할 수 있어야 합니다.
'''
'''
배열로 바꾸기
조건탐색 후 데이터 변경
조건 없을시 종료
'''

#상하좌우 탐색 순서 배열
dx = [-1,0,1,0]
dy = [0,1,0,-1]

n = int(input())
a = [[0]*(n+2)]+[[0]+list(map(int,input().split()))+[0] for _ in range(n)]+[[0]*(n+2)]#상하좌우 탐색을 위해 끝에 하나씩 추가

while True:
    cnt = 0#바꾼횟수 저장 변수
    
    for i in range(1,n+1):
        for j in range(1,n+1):            
            if all(a[i][j] > 0  and  a[i][j] <= a[i+dx[k]][j+dy[k]] for k in range(4)):  #상하좌우 탐색후 조건에 따라 증가
                cnt += 1
                a[i][j] += 1

        
    if cnt == 0:#증가안할시
        
        break
'''
배열출력
for i in range(1,n+1):
    for j in range(1, n+1):
        print(a[i][j], end=' ')
    print()
'''
answer=0

for i in range(1,n+1):#list 2차원 배열 이상시 Error 발생
    answer+=sum(a[i])
    
print('연못 깊이의 합은 ', answer )

'''
Test
10 
0 0 0 0 0 0 0 0 0 0
0 0 0 0 1 0 0 0 0 0
0 0 0 1 1 1 0 0 0 0
0 1 1 1 1 1 1 0 0 0
0 1 1 1 1 1 1 1 1 0
0 1 1 1 1 1 1 1 1 0
0 0 1 1 1 1 1 1 0 0
0 0 0 1 1 1 1 0 0 0
0 0 0 0 1 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
'''